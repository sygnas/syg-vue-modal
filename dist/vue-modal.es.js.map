{"version":3,"file":"vue-modal.es.js","sources":["../src/useModalControl.ts","../src/VueModal.vue"],"sourcesContent":["import { ref, computed, watch } from \"vue\";\nimport { TControlOption, IRef } from \"./types\";\n\ntype TElementRef = IRef<HTMLElement | null>;\n\ntype TModalState = {\n  id: string;\n  isOpen: boolean;\n  scrollContainer?: TElementRef | HTMLElement;\n  // scrollContainer?: HTMLElement;\n};\n\n// モーダルステート一覧を格納\nconst modals = ref<TModalState[]>([]);\n\n/**\n * モーダルステートを取得\n * 存在しなければ新規に登録したものを返す\n */\nconst $_getModalState = (id: string): TModalState => {\n  let modalState: TModalState | undefined = modals.value.find(\n    (modal) => modal.id === id\n  );\n  if (modalState) return modalState;\n\n  modals.value.push({\n    id,\n    isOpen: false,\n    scrollContainer: undefined,\n  });\n  return modals.value.find((modal) => modal.id === id) as TModalState;\n};\n\n/**\n * モーダルコントローラー\n * @param id モーダルid\n * @param opt onOpen / onClose を指定\n */\nconst useModalControl = (id: string, opt?: TControlOption) => {\n  const $_modalState = $_getModalState(id);\n\n  // 開いているか\n  const isOpen = computed<boolean>(() => $_modalState.isOpen);\n\n  // 開いているかを監視して、設定されたメソッドを実行する\n  watch(isOpen, (isOpenNext: boolean) => {\n    if (isOpenNext && opt && opt.onOpen !== undefined) {\n      opt.onOpen($_modalState.id);\n    } else if (!isOpenNext && opt && opt.onClose !== undefined) {\n      opt.onClose($_modalState.id);\n    }\n  });\n\n  /**\n   * モーダルを開く\n   * <body> のスクロールを止める\n   */\n  const open = () => {\n    $_modalState.isOpen = true;\n    document.body.style.overflow = \"hidden\";\n  };\n\n  /**\n   * モーダルを閉じる\n   * <body> のスクロールを戻す\n   */\n  const close = () => {\n    $_modalState.isOpen = false;\n    document.body.style.overflow = \"auto\";\n  };\n\n  /**\n   * スクロールコンテナを登録\n   */\n  const setScrollContainer = (scrollContainer: TElementRef) => {\n    $_modalState.scrollContainer = scrollContainer;\n  };\n\n  /**\n   * 指定座標にスクロールさせる\n   * @param posY 座標\n   * @param isSmooth スムーススクロールさせるなら true\n   * @returns スクロール成功 true / 失敗 false\n   */\n  const scroll = (posY: number, isSmooth: boolean = false): boolean => {\n    // ref() 内の ref() オブジェクトにアクセスするとなぜかアンラップされるので、ここでは HTMLElement として取り出される\n    const container = $_modalState.scrollContainer as HTMLElement;\n\n    if (!container) return false;\n\n    container.scroll({\n      top: posY,\n      behavior: isSmooth ? \"smooth\" : (\"instant\" as ScrollBehavior),\n    });\n    return true;\n  };\n\n  return { open, close, scroll, setScrollContainer, isOpen };\n};\n\nexport { useModalControl };\n","<script setup lang=\"ts\">\nimport { defineProps, ref, computed, StyleValue } from \"vue\";\nimport { useModalControl } from \"./useModalControl\";\nimport $style from \"./modal.module.css\";\nimport { TModalOption } from \"./types\";\n\ntype TProps = {\n  id: string;\n  option: TModalOption;\n};\n\n// モーダルのデフォルトオプション\nconst defaultOption: TModalOption = {\n  closeBtnText: \"X\",\n  classModal: \"c-modal\",\n  classBg: \"c-modal__bg\",\n  classSlide: \"c-modal__slide\",\n  classContent: \"c-modal__content\",\n  classClose: \"c-modal__close-btn\",\n  styleBgColor: \"rgba(0, 0, 0, .7)\",\n  styleZIndex: 10000,\n  transitionBaseName: \"syg-modal-fade\",\n};\n\n// プロパティ\n// モーダルオプションはデフォルト値とマージ\nconst props = defineProps<TProps>();\nconst opt = computed<TModalOption>(() => {\n  return Object.assign({}, defaultOption, props.option);\n});\n\n// css変数を使って背景色と z-index を制御\nconst modalStyle = ref({});\nmodalStyle.value = {\n  \"--modal--bg-color\": opt.value.styleBgColor,\n  \"--modal--z-index\": opt.value.styleZIndex,\n}\n\n// スクロールコンテナ`slide`、内容物コンテナ`content`\nconst scrollContainer = ref<HTMLElement | null>(null);\nconst contentContainer = ref<HTMLElement | null>(null);\n\n/**\n * 内容物の align 変更\n * `slide`より`content`が大きいと align-items:flex-start、それ以外は center にする\n */\nconst changeAlignItems = () => {\n  const scrollCon = scrollContainer.value;\n  const contentCon = contentContainer.value;\n\n  if (scrollCon === null || contentCon === null) return;\n\n  if (scrollCon.clientHeight < contentCon.clientHeight) {\n    scrollCon.style.alignItems = \"flex-start\";\n  } else {\n    scrollCon.style.alignItems = \"center\";\n  }\n};\n\n\n/**\n * モーダル制御と、内容高さチェックの setInterval\n */\nlet intervalId: number = 0;\n\nconst modalControl = useModalControl(props.id, {\n  onOpen: (id: string) => {\n    modalControl.setScrollContainer(scrollContainer);\n    setTimeout(changeAlignItems, 50);\n    intervalId = setInterval(changeAlignItems, 500);\n  },\n  onClose: (id: string) => {\n    clearInterval(intervalId);\n  },\n});\n\n// モーダルが開いているか\nconst isOpen = computed<boolean>(() => modalControl.isOpen.value);\n\n/**\n * 閉じる\n */\nconst closeModal = () => {\n  modalControl.close();\n};\n</script>\n\n////////////////////////////////////////////////////////////////////////////////\n\n<template>\n  <teleport to=\"body\">\n    <transition :name=\"opt.transitionBaseName\">\n      <div\n        v-if=\"isOpen\"\n        :class=\"[$style.modal, opt.classModal]\"\n        :style=\"modalStyle\"\n      >\n        <!-- 背景 -->\n        <span\n          :class=\"[$style.modal__bg, opt.classBg]\"\n          @click=\"closeModal\"\n        ></span>\n\n        <!-- overflow:auto でスクロールバーを右端に表示するためのラッパー -->\n        <div\n          :class=\"[$style.modal__slide, opt.classSlide]\"\n          @click=\"closeModal\"\n          ref=\"scrollContainer\"\n        >\n          <!-- 実際のコンテンツ幅を定義するためのコンテナ -->\n          <div\n            :class=\"[$style.modal__content, opt.classContent]\"\n            @click.stop=\"\"\n            ref=\"contentContainer\"\n          >\n            <slot></slot>\n          </div>\n        </div>\n\n        <!-- 閉じるボタン -->\n        <button\n          :class=\"[$style.modal__close_btn, opt.classClose]\"\n          @click=\"closeModal\"\n          v-html=\"opt.closeBtnText\"\n        ></button>\n      </div>\n    </transition>\n  </teleport>\n</template>\n\n////////////////////////////////////////////////////////////////////////////////\n\n<style>\n.syg-modal-fade-leave-active,\n.syg-modal-fade-enter-active {\n  transition: 0.5s;\n}\n.syg-modal-fade-leave-to,\n.syg-modal-fade-enter-from {\n  opacity: 0;\n}\n.syg-modal-fade-leave-from,\n.syg-modal-fade-enter-to {\n  opacity: 1;\n}\n</style>\n"],"names":[],"mappings":"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"}