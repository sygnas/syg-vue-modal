{"version":3,"file":"vue-modal.es.js","sources":["../src/vue-modal.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { defineProps, withDefaults, ref, onMounted, onBeforeMount, onUnmounted } from 'vue';\nimport $style from './modal.module.css';\n\n\ntype TProps = {\n  opt?: {\n    closeBtnText?: string;\n    classModal?: string;\n    classBg?: string;\n    classSlide?: string;\n    classContent?: string;\n    classClose?: string;\n    styleBgColor?: string;\n    styleZIndex?: number;\n  },\n  handlClose?: () => void;\n};\n\nconst props = withDefaults(defineProps<TProps>(), {\n  opt: () => {\n    return {\n      closeBtnText: 'X',\n      classModal: 'c-modal',\n      classBg: 'c-modal__bg',\n      classSlide: 'c-modal__slide',\n      classContent: 'c-modal__content',\n      classClose: 'c-modal__close-btn',\n      styleBgColor: 'rgba(0, 0, 0, .7)',\n      styleZIndex: 10000,\n    }\n  },\n});\n\nconst modalStyle = ref({});\nconst scrollContainer = ref<any>(null);\n\n/**\n * 閉じる\n */\nconst closeModal = () => {\n  if( props.handlClose ){\n    props.handlClose();\n  }\n};\n\n/**\n  * ページ内容が切り替わった時などに指定座標にスクロールさせる。\n  * 基本的には 0 を指定してトップに移動させる。\n  * 親から anime.js などを使ってスムーズにスクロールさせてもよい\n  * 親の this.$refs から this.$refs.modal.scroll(0); のように呼び出す\n  */\nconst scroll = (posY:number, isSmooth=false) => {\n  // if(typeof scrollContainer.value !== Element) return;\n\n  scrollContainer.value.scroll({\n    top: posY,\n    behavior: isSmooth ? 'smooth' : 'instant' as ScrollBehavior,\n  });\n};\n\nonMounted(() => {\n  // css変数を使って背景色と z-index を制御\n  modalStyle.value = {\n    '--modal--bg-color': props.opt.styleBgColor,\n    '--modal--z-index': props.opt.styleZIndex,\n  };\n});\n\n// マウント前後に <body> のスクロールを止める\nonBeforeMount(() => {\n  document.body.style.overflow = 'hidden';\n});\n\nonUnmounted(() => {\n  document.body.style.overflow = 'auto';\n});\n\n</script>\n\n\n////////////////////////////////////////////////////////////////////////////////\n\n<template>\n  <div :class=\"[$style.modal, props.opt.classModal]\" :style=\"modalStyle\">\n    <!-- 背景 -->\n    <span :class=\"[$style.modal__bg, props.opt.classBg]\"></span>\n\n    <!-- overflow:auto でスクロールバーを右端に表示するためのラッパー -->\n    <div :class=\"[$style.modal__slide, props.opt.classSlide]\" @click.prevent=\"closeModal\" ref=\"scrollContainer\">\n\n      <!-- 実際のコンテンツ幅を定義するためのコンテナ -->\n      <div :class=\"[$style.modal__content, props.opt.classContent]\" @click.stop=\"\">\n        <slot></slot>\n      </div>\n\n    </div>\n\n    <!-- 閉じるボタン -->\n    <button\n      :class=\"[$style.modal__close_btn, props.opt.classClose]\"\n      @click.prevent=\"closeModal\"\n      v-html=\"props.opt.closeBtnText\"\n    ></button>\n  </div>\n</template>\n\n////////////////////////////////////////////////////////////////////////////////\n<!--\n<style lang=\"css\" module>\n.modal {\n  z-index: var(--modal--z-index);\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n.modal__bg {\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: var(--modal--bg-color);\n}\n.modal__slide {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n}\n.modal__content {\n  position: relative;\n  width: max-content;\n  margin-left: auto;\n  margin-right: auto;\n}\n.modal__close_btn {\n  z-index: 1000;\n  position: absolute;\n  user-select: none;\n  appearance: none;\n  cursor: pointer;\n  outline: none;\n}\n</style>\n-->"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,IAAM,MAAA,UAAA,GAAa,GAAI,CAAA,EAAE,CAAA,CAAA;AACzB,IAAM,MAAA,eAAA,GAAkB,IAAS,IAAI,CAAA,CAAA;AAKrC,IAAA,MAAM,aAAa,MAAM;AACvB,MAAA,IAAI,MAAM,UAAY,EAAA;AACpB,QAAA,KAAA,CAAM,UAAW,EAAA,CAAA;AAAA,OACnB;AAAA,KACF,CAAA;AAiBA,IAAA,SAAA,CAAU,MAAM;AAEd,MAAA,UAAA,CAAW,KAAQ,GAAA;AAAA,QACjB,mBAAA,EAAqB,MAAM,GAAI,CAAA,YAAA;AAAA,QAC/B,kBAAA,EAAoB,MAAM,GAAI,CAAA,WAAA;AAAA,OAChC,CAAA;AAAA,KACD,CAAA,CAAA;AAGD,IAAA,aAAA,CAAc,MAAM;AAClB,MAAS,QAAA,CAAA,IAAA,CAAK,MAAM,QAAW,GAAA,QAAA,CAAA;AAAA,KAChC,CAAA,CAAA;AAED,IAAA,WAAA,CAAY,MAAM;AAChB,MAAS,QAAA,CAAA,IAAA,CAAK,MAAM,QAAW,GAAA,MAAA,CAAA;AAAA,KAChC,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}